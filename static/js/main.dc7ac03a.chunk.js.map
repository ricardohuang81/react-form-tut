{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","fighterData","map","row","index","key","name","type","onClick","removeFighter","Table","this","Component","Form","handleChange","event","target","value","console","log","setState","submitForm","handleSubmit","state","initialState","onChange","App","fighters","filter","fighter","i","className","ReactDOM","render","document","getElementById"],"mappings":"uQAEMA,EAAc,WAClB,OACI,+BACE,4BACE,oCACA,uCAMJC,EAAY,SAACC,GACjB,IAAMC,EAAOD,EAAME,YAAYC,KAAI,SAACC,EAAKC,GACvC,OACE,wBAAIC,IAAKD,GACP,4BAAKD,EAAIG,MACT,4BAAKH,EAAII,MACT,4BACE,4BAAQC,QAAS,kBAAMT,EAAMU,cAAcL,KAA3C,eAKR,OAAO,+BAAQJ,IAiBFU,E,iLAbH,IAAD,EAEgCC,KAAKZ,MAApCE,EAFD,EAECA,YAAaQ,EAFd,EAEcA,cAErB,OACE,+BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWR,YAAaA,EAAaQ,cAAeA,S,GARxCG,a,OCqBLC,E,YA9Cb,WAAYd,GAAQ,IAAD,8BACjB,4CAAMA,KAORe,aAAe,SAAAC,GAAU,IAAD,EACEA,EAAMC,OAAtBV,EADc,EACdA,KAAMW,EADQ,EACRA,MACdC,QAAQC,IAAIb,GACZ,EAAKc,SAAL,eACGd,EAAOW,KAZO,EAgBnBI,WAAa,WACX,EAAKtB,MAAMuB,aAAa,EAAKC,OAC7B,EAAKH,SAAS,EAAKI,eAhBnB,EAAKA,aAAe,CAClBlB,KAAM,GACNC,KAAM,IAER,EAAKgB,MAAQ,EAAKC,aAND,E,sEAqBT,IAAD,EACgBb,KAAKY,MAApBjB,EADD,EACCA,KAAMC,EADP,EACOA,KAEd,OACE,8BACE,uCACA,2BACEA,KAAK,OACLD,KAAK,OACLW,MAAOX,EACPmB,SAAUd,KAAKG,eAEjB,uCACA,2BACEP,KAAK,OACLD,KAAK,OACLW,MAAOV,EACPkB,SAAUd,KAAKG,eAEjB,2BAAOP,KAAK,SAASU,MAAM,SAAST,QAASG,KAAKU,kB,GAzCvCT,aC+BJc,E,2MA5BbH,MAAQ,CACNI,SAAU,I,EAGZlB,cAAgB,SAAAL,GAAU,IAChBuB,EAAa,EAAKJ,MAAlBI,SACR,EAAKP,SAAS,CACZO,SAAUA,EAASC,QAAO,SAACC,EAASC,GAClC,OAAOA,IAAM1B,Q,EAKnBkB,aAAe,SAAAO,GACb,EAAKT,SAAS,CAAEO,SAAS,GAAD,mBAAM,EAAKJ,MAAMI,UAAjB,CAA2BE,O,wEAG3C,IACAF,EAAahB,KAAKY,MAAlBI,SACR,OACE,yBAAKI,UAAU,aACb,kBAAC,EAAD,CAAO9B,YAAa0B,EAAUlB,cAAeE,KAAKF,gBAClD,kBAAC,EAAD,CAAMa,aAAcX,KAAKW,oB,GAvBfV,aCElBoB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.dc7ac03a.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nconst TableHeader = () => {\n  return (\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Type</th>\n        </tr>\n      </thead>\n  )\n}\n\nconst TableBody = (props) => {\n  const rows = props.fighterData.map((row, index) => {\n    return (\n      <tr key={index}>\n        <td>{row.name}</td>\n        <td>{row.type}</td>\n        <td>\n          <button onClick={() => props.removeFighter(index)}>Delete</button>\n        </td>\n      </tr>\n    )\n  })\n  return <tbody>{rows}</tbody>\n}\n\nclass Table extends Component {\n  render() {\n\n    const { fighterData, removeFighter } = this.props\n\n    return (\n      <table>\n        <TableHeader />\n        <TableBody fighterData={fighterData} removeFighter={removeFighter} />\n      </table>\n    )\n  }\n}\n\nexport default Table","import React, { Component } from 'react'\n\nclass Form extends Component {\n  constructor(props) {\n    super(props)\n    this.initialState = {\n      name: '',\n      type: ''\n    }\n    this.state = this.initialState\n  }\n  handleChange = event => {\n    const { name, value } = event.target\n    console.log(name)\n    this.setState({\n      [name]: value\n    })\n  }\n\n  submitForm = () => {\n    this.props.handleSubmit(this.state)\n    this.setState(this.initialState)\n  }\n\n  render() {\n    const { name, type } = this.state\n\n    return (\n      <form>\n        <label>Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={this.handleChange}\n        />\n        <label>Type</label>\n        <input\n          type=\"text\"\n          name=\"type\"\n          value={type}\n          onChange={this.handleChange}\n        />\n        <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\n      </form>\n    )\n  }\n}\n\nexport default Form","import React, { Component } from 'react'\nimport Table from './Table'\nimport Form from './Form'\n\nclass App extends Component {\n  state = {\n    fighters: []\n  }\n\n  removeFighter = index => {\n    const { fighters } = this.state\n    this.setState({\n      fighters: fighters.filter((fighter, i) => {\n        return i !== index\n      })\n    })\n  }\n\n  handleSubmit = fighter => {\n    this.setState({ fighters: [...this.state.fighters, fighter] })\n  }\n\n  render() {\n    const { fighters } = this.state\n    return (\n      <div className=\"container\">\n        <Table fighterData={fighters} removeFighter={this.removeFighter} />\n        <Form handleSubmit={this.handleSubmit} />\n      </div>\n    )\n  }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import App from './Api';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}